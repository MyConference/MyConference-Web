extends ../layout

block contents
  .panel.panel-default

    .panel-heading
      h4
        if edit
          | Edit Venue &nbsp;
          small= data.id
        else
          | Add Venue

    .panel-body
      form.form-horizontal(role="form" method="post" action=(edit ? "/venues/"+data.id+"/edit" : "/venues/new"))

        if !edit
          input(type="hidden" name="conference" value=conference.id)

        .form-group
          label.col-sm-2(for="venue-title") Name
          .col-sm-10
            input#venue-title.form-control(type="text" name="name" value=(data.name || null) placeholder="Venue Name")

        .form-group
          label.col-sm-2(for="venue-details") Details
          .col-sm-10
            input#venue-details.form-control(type="text" name="details" value=(data.details || null) placeholder="Venue Details")

        .form-group
          label.col-sm-2 Location
          .col-sm-2: input#venue-latitude.form-control(type="text" name="latitude" placeholder="Latitude" value=(data.latitude || null) )
          .col-sm-2: input#venue-longitude.form-control(type="text" name="longitude" placeholder="Longitude" value=(data.longitude || null) )
          .col-sm-6: input#venue-address.form-control(type="text" placeholder="Address")
          .col-sm-10.col-sm-offset-2.gmap-container: #map-canvas.gmap
          

        .form-group
          .col-sm-offset-2.col-sm-10
            button.btn.btn-default(type="submit")
              if edit
                | Save Changes
              else
                | Create


  script.
    function reverseGeocode (lat, lng, cb) {
      $.ajax({
        url: 'http://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat + ',' + lng + '&sensor=false',
        dataType: 'json'
      }).done(function (json) {
        cb(json.results);
      });
    }

    function updateAddress () {
      var lat = $('#venue-latitude').val();
      var lng = $('#venue-longitude').val();

      reverseGeocode(lat, lng, function (results) {
        var elem = $('#venue-address');

        if (results.length) {
          elem.val(results[0].formatted_address);
          updateMap();
          updateMap();
          deleteMarkers();
          var marker = new google.maps.Marker({
              map: gmap,
              position: results[0].geometry.location
          });
          markers.push(marker);
        }
      });
    }

    function updateMap () {
      var lat = $('#venue-latitude').val();
      var lng = $('#venue-longitude').val();

      if (!isNaN(lat) && !isNaN(lng)) {
        gmap.setZoom(15);
        gmap.panTo({'lat': Number(lat), 'lng': Number(lng)});
      }
    }

    function updateCoordinates() {
      var address = document.getElementById("venue-address").value;
      geocoder.geocode( {'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          $('#venue-latitude').val(results[0].geometry.location.lat().toFixed(6));
          $('#venue-longitude').val(results[0].geometry.location.lng().toFixed(6));
          gmap.setCenter(results[0].geometry.location);
          updateMap();
          deleteMarkers();
          var marker = new google.maps.Marker({
              map: gmap,
              position: results[0].geometry.location
          });
          markers.push(marker);
        }
      });
    }

    function deleteMarkers() {
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(null);
      }
      markers = [];
    }

    $(function(){
      $('#venue-latitude, #venue-longitude').on('keyup', updateAddress);
      $('#venue-address').on('keyup', updateCoordinates);
      updateAddress();
    });